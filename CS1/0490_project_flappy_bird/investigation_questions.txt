'''
For 35 points complete the following investigation, which will help
you with Flappy Bird.

#1) Run the following program and copy what it prints out into Desmos 
https://www.desmos.com/calculator
Zoom out until you see all the points. What is their shape?
'''
dy = -10 #create variable for the change in the y value
y = 30
gravity = 1
output = ''
for x in range(20):
    #Accelerate downward
    dy = dy + gravity
    #Move the y value by the amount dy
    y = y + dy
    output = output + "("+str(x)+","+str(y)+"),"
print(output[0:-1])



'''2) The following code is one of the shortest pygame programs I can 
think of. How can you interact with it and what happens when you do?
'''
import pygame
pygame.init()

def handleEvents():
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit(); exit()
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_ESCAPE:
                pygame.quit(); exit()
            elif event.key == pygame.K_UP:
                bird_rect.y = bird_rect.y - 5

#Initialize variables:
clock = pygame.time.Clock()
screen_width = 700
screen_height = 500
surface = pygame.display.set_mode((screen_width,screen_height))
green = 0,255,0
red = 255,0,0
blue = 0,0,255
yellow = 255,255,0
white = 255,255,255
black = 0,0,0

bird_rect = pygame.Rect(100,100,50,50)

#Main program loop
while True:
    handleEvents()
    surface.fill(black) #set background color
    pygame.draw.rect(surface, yellow, bird_rect)
    pygame.display.flip()
    #Delay to get 30 fps
    clock.tick(30)




'''3) Modify the previous program to make the yellow square fall 
continuously down the screen. Does y = y + 5 move the y value up or 
down?'''


'''4) Add an if statement to your code that checks to see if the 
y value + bird_rect.height is greater than screen_height. If True, 
then stop the bird from falling further. This should make the bird 
rest on the bottom of the screen.
Note, to stop the bird you need to set the y value of the bird rectangle 
so that it sits on the bottom of the screen. You might also reset dy to 
zero.
Copy and paste your if statement here as the answer to this question.
'''

'''5) Instead of doing this when the up key is pressed:
bird_rect.y = bird_rect.y - 5
instead subtract a number of your choice from the value of the dy 
variable. Experiment with different amounts to subtract. What happens to 
the blue rectangle when you press the up arrow key now?
'''


'''6) Describe the pattern that repeats in the following program. (Don't write it down, just describe it.) You might consider using import time and time.sleep(1) to slow it down
'''
x = 10
dx = -1
for i in range(100):
    x = x+dx
    if x<0:
        x = 10
    print(x)



'''7) What does the following program print? Answer in your head 
without running the code, then check your answer.'''
import pygame
#Get one rectangle
x = 0
y = 0
width = 100
height = 10
rect1 = pygame.Rect(x,y,width,height)
#Get a second rectangle
x = 90
y = 5
width = 10
height = 10
rect2 = pygame.Rect(x,y,width,height)
#Did they collide?
if rect1.colliderect(rect2):
    print('collision')
else:
    print('missed')



'''8) What does the following program print? Answer in your head 
without running the code, then check your answer.'''
import pygame
#Get one rectangle
x = 0
y = 0
width = 100
height = 10
rect1 = pygame.Rect(x,y,width,height)
#Get a second rectangle
x = 90
y = 5
width = 10
height = 10
rect2 = pygame.Rect(x,y,width,height)
for i in range(10):
    rect2.y = rect2.y+1
    #Do they collide?
    if rect1.colliderect(rect2):
        print('collision')
    else:
        print('missed')
