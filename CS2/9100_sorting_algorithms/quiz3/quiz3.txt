
What is Big "O" of 3n^3+2n^6+n^2?

What is Big "O" of 52 log(n)+4?

def swap(list, i1, i2):
    temp = list[i1]
    list[i1]= list[i2]
    list[i2] = temp

#What does this code print?
numbers = [0,3,2,5,4]
for i in range(len(numbers)-1):
    if numbers[i+1] < numbers[i]:
        swap(numbers,i,i+1)
print(numbers) #ANSWER: [0, 2, 3, 4, 5]

#What does this code print?
numbers = [2,8,15,40,10]
i = 4
current = numbers[i]
j = i-1
while j >= 0 and current < numbers[j]:
    swap(numbers,j,j+1)
    j = j-1
print(numbers) #ANSWER: [2, 8, 10, 15, 40]

Quicksort question: What's the ideal pivot to use to split this list?
[45,20,97]

What's the ideal pivot to use to split this list?
[22, 65, 100, 62, 88]

What does this code print?
list1 = []
list2 = []
numbers = [2, 4, 5, 1, 6, 3]
pivot = numbers.pop(4)
for n in numbers:
    if n < pivot:
        list1.append(n)
    else:
        list2.append(n)
print(list1 + [pivot] + list2) #Answer: [2, 4, 5, 1, 3, 6]

Was a good pivot used in the previous question, why or why not?

When quick-sorting, the ideal pivot does what?
#Answer, creates two equal sized sub lists.

In your own words, what is an in-place sorting algorithm?

